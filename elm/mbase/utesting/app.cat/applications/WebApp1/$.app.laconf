application
{
  application-name="WebApp1"

  log
  {
    name="Logger" reliable="true"
    destination {type="$(/gv/types/$log-csv)" name="WebApp1" path="$(/gv/paths/$log-root)" file-name="{0:yyyyMMdd}-$($name).csv.log"}
  }

  object-store { guid="7D311B53-5762-4975-A6E7-08C6B6590117" }

  glue
	{
    servers
    {
      /*
      server
      {
        name="Terminal"
        node="apterm://*:$(/gv/services/$aws-appterm)"
        contract-servers="Azos.Sky.Hosts.aws.AWSRemoteTerminal, Azos.Sky"
      }
      */
    }
	}

  wave
  {
    server
    {
      // name="WebApp1 Test Server"
      // parallel-works=2048
      // parallel-accepts=1024
      environment-name="DEV"
      // instrumentation-enabled=true

      prefix{ name="http://+:9777/" }

      default-error-handler
      {
        show-dump { match{name=all} }
        //log {  match{name=all} }
      }

      gate
      {
        //type="may inject type"
        name="Default Gate"
        enabled = true

        incoming
        {
          default-action=allow

          rule{name="sessionFlood" order=0 action=deny from-expression="$newSession>3"}

          var-def{name="newSession" decay-by="1" interval-sec="20"}
        }
      }

      dispatcher
      {
        // type="Azos.Wave.MultithreadedDispatcher"

        //filter
        //{
        //  name="Log All" order=0 type="Azos.Wave.Filters.LoggingFilter, Azos.Wave"
        //  before
        //  {
        //    match { path="{*PAZZ}" var { name="type" default="TraceD" } }
        //  }
        //}

        filter
        {
          name="Errors" order=1 type="Azos.Wave.Filters.ErrorFilter, Azos.Wave"
          show-dump
          {
            match{name="localhost" order=1 is-local=true }
          }
          // log
          // {
          //   match { name="all" var { name="aaa" default="1223" } }
          // }
        }

      }//dispatcher
    }//server
  }//wave
}