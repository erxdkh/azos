// Do not modify by hand. This file is auto-generated by Arow code generator
// Generated on 6/5/2019 8:38:11 PM by Anton at OCTOD
// Framework: [1966093] by Anton@OCTOD:Win32NT on 6/6/2019 12:37:11 AM UTC

using System;
using System.Collections.Generic;
using Azos;
using Azos.IO;
using Azos.Data;
using Azos.Serialization.Arow;
using AW = Azos.Serialization.Arow.Writer;

namespace Azos.Tests.Nub.Serialization._arow_generated
{
  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.SimplePersonRow
  ///</summary>
  internal class SimplePersonRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.SimplePersonRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonRow)aDoc;
      // 'id' = 25705
      AW.Write(streamer, 25705, doc.ID);
      // 'name' = 1701667182
      if (doc.Name != null)
        AW.Write(streamer, 1701667182, doc.Name);
      else AW.WriteNull(streamer, 1701667182);
      // 'age' = 6645601
      AW.Write(streamer, 6645601, doc.Age);
      // 'b1' = 12642
      AW.Write(streamer, 12642, doc.Bool1);
      // 's1' = 12659
      if (doc.Str1 != null)
        AW.Write(streamer, 12659, doc.Str1);
      else AW.WriteNull(streamer, 12659);
      // 's2' = 12915
      if (doc.Str2 != null)
        AW.Write(streamer, 12915, doc.Str2);
      else AW.WriteNull(streamer, 12915);
      // 'd1' = 12644
      AW.Write(streamer, 12644, doc.Date);
      // 'slr' = 7498867
      AW.Write(streamer, 7498867, doc.Salary);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonRow)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 25705:
            { // 'id'
              if (dt == DataType.GDID) doc.ID = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 1701667182:
            { // 'name'
              if (dt == DataType.Null) doc.Name = null;
              else if (dt == DataType.String) doc.Name = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 6645601:
            { // 'age'
              if (dt == DataType.Int32) doc.Age = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 12642:
            { // 'b1'
              if (dt == DataType.Boolean) doc.Bool1 = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 12659:
            { // 's1'
              if (dt == DataType.Null) doc.Str1 = null;
              else if (dt == DataType.String) doc.Str1 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12915:
            { // 's2'
              if (dt == DataType.Null) doc.Str2 = null;
              else if (dt == DataType.String) doc.Str2 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12644:
            { // 'd1'
              if (dt == DataType.DateTime) doc.Date = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 7498867:
            { // 'slr'
              if (dt == DataType.Double) doc.Salary = Reader.ReadDouble(streamer);
              else break;
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow
  ///</summary>
  internal class SimplePersonWithEnumRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow)aDoc;
      // 'id' = 25705
      AW.Write(streamer, 25705, doc.ID);
      // 'name' = 1701667182
      if (doc.Name != null)
        AW.Write(streamer, 1701667182, doc.Name);
      else AW.WriteNull(streamer, 1701667182);
      // 'age' = 6645601
      AW.Write(streamer, 6645601, doc.Age);
      // 'b1' = 12642
      AW.Write(streamer, 12642, doc.Bool1);
      // 's1' = 12659
      if (doc.Str1 != null)
        AW.Write(streamer, 12659, doc.Str1);
      else AW.WriteNull(streamer, 12659);
      // 's2' = 12915
      if (doc.Str2 != null)
        AW.Write(streamer, 12915, doc.Str2);
      else AW.WriteNull(streamer, 12915);
      // 'd1' = 12644
      AW.Write(streamer, 12644, doc.Date);
      // 'slr' = 7498867
      AW.Write(streamer, 7498867, doc.Salary);
      // 'mar' = 7496045
      Writer.Write(streamer, 7496045, (int)doc.Married);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 25705:
            { // 'id'
              if (dt == DataType.GDID) doc.ID = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 1701667182:
            { // 'name'
              if (dt == DataType.Null) doc.Name = null;
              else if (dt == DataType.String) doc.Name = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 6645601:
            { // 'age'
              if (dt == DataType.Int32) doc.Age = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 12642:
            { // 'b1'
              if (dt == DataType.Boolean) doc.Bool1 = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 12659:
            { // 's1'
              if (dt == DataType.Null) doc.Str1 = null;
              else if (dt == DataType.String) doc.Str1 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12915:
            { // 's2'
              if (dt == DataType.Null) doc.Str2 = null;
              else if (dt == DataType.String) doc.Str2 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12644:
            { // 'd1'
              if (dt == DataType.DateTime) doc.Date = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 7498867:
            { // 'slr'
              if (dt == DataType.Double) doc.Salary = Reader.ReadDouble(streamer);
              else break;
              continue;
            }
          case 7496045:
            { // 'mar'
              if (dt != DataType.Int32) break;
              var ev = (@Azos.@Tests.@Nub.@Serialization.@SimplePersonWithEnumRow.@MaritalStatus)Reader.ReadInt32(streamer);
              doc.Married = ev;
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.SimplePersonWithByteArrayRow
  ///</summary>
  internal class SimplePersonWithByteArrayRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.SimplePersonWithByteArrayRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonWithByteArrayRow)aDoc;
      // 'id' = 25705
      AW.Write(streamer, 25705, doc.ID);
      // 'name' = 1701667182
      if (doc.Name != null)
        AW.Write(streamer, 1701667182, doc.Name);
      else AW.WriteNull(streamer, 1701667182);
      // 'age' = 6645601
      AW.Write(streamer, 6645601, doc.Age);
      // 'b1' = 12642
      AW.Write(streamer, 12642, doc.Bool1);
      // 's1' = 12659
      if (doc.Str1 != null)
        AW.Write(streamer, 12659, doc.Str1);
      else AW.WriteNull(streamer, 12659);
      // 's2' = 12915
      if (doc.Str2 != null)
        AW.Write(streamer, 12915, doc.Str2);
      else AW.WriteNull(streamer, 12915);
      // 'd1' = 12644
      AW.Write(streamer, 12644, doc.Date);
      // 'slr' = 7498867
      AW.Write(streamer, 7498867, doc.Salary);
      // 'buf' = 6714722
      if (doc.Buffer != null)
        AW.Write(streamer, 6714722, doc.Buffer);
      else AW.WriteNull(streamer, 6714722);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.SimplePersonWithByteArrayRow)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 25705:
            { // 'id'
              if (dt == DataType.GDID) doc.ID = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 1701667182:
            { // 'name'
              if (dt == DataType.Null) doc.Name = null;
              else if (dt == DataType.String) doc.Name = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 6645601:
            { // 'age'
              if (dt == DataType.Int32) doc.Age = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 12642:
            { // 'b1'
              if (dt == DataType.Boolean) doc.Bool1 = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 12659:
            { // 's1'
              if (dt == DataType.Null) doc.Str1 = null;
              else if (dt == DataType.String) doc.Str1 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12915:
            { // 's2'
              if (dt == DataType.Null) doc.Str2 = null;
              else if (dt == DataType.String) doc.Str2 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 12644:
            { // 'd1'
              if (dt == DataType.DateTime) doc.Date = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 7498867:
            { // 'slr'
              if (dt == DataType.Double) doc.Salary = Reader.ReadDouble(streamer);
              else break;
              continue;
            }
          case 6714722:
            { // 'buf'

              if (dt == DataType.Null) doc.Buffer = null;
              else if (dt == DataType.ByteArray) doc.Buffer = streamer.ReadByteArray();
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Byte) break;
                doc.Buffer = Reader.ReadByteArray(streamer);
              }
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.FamilyRow
  ///</summary>
  internal class FamilyRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.FamilyRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.FamilyRow)aDoc;
      // 'id' = 25705
      AW.Write(streamer, 25705, doc.ID);
      // 'fam' = 7168358
      if (doc.Name != null)
        AW.Write(streamer, 7168358, doc.Name);
      else AW.WriteNull(streamer, 7168358);
      // 'reg' = 6776178
      AW.Write(streamer, 6776178, doc.RegisteredToVote);
      // 'fat' = 7627110
      if (doc.Father != null)
        Writer.WriteRow(streamer, 7627110, doc.Father);
      else AW.WriteNull(streamer, 7627110);
      // 'mot' = 7630701
      if (doc.Mother != null)
        Writer.WriteRow(streamer, 7630701, doc.Mother);
      else AW.WriteNull(streamer, 7630701);
      // 'bro' = 7303778
      if (doc.Brothers != null)
        Writer.WriteRowArray(streamer, 7303778, doc.Brothers);
      else AW.WriteNull(streamer, 7303778);
      // 'sis' = 7563635
      if (doc.Sisters != null)
        Writer.WriteRowArray(streamer, 7563635, doc.Sisters);
      else AW.WriteNull(streamer, 7563635);
      // 'adv' = 7758945
      if (doc.Advisers != null)
        Writer.WriteRowArray(streamer, 7758945, doc.Advisers);
      else AW.WriteNull(streamer, 7758945);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.FamilyRow)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 25705:
            { // 'id'
              if (dt == DataType.GDID) doc.ID = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 7168358:
            { // 'fam'
              if (dt == DataType.Null) doc.Name = null;
              else if (dt == DataType.String) doc.Name = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 6776178:
            { // 'reg'
              if (dt == DataType.Boolean) doc.RegisteredToVote = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 7627110:
            { // 'fat'
              if (dt == DataType.Null) { doc.Father = null; continue; }
              if (dt != DataType.Doc) break;
              var vdoc = new Azos.Tests.Nub.Serialization.SimplePersonRow();
              if (Reader.TryReadRow(doc, vdoc, streamer, CodeGenerator.GetName(name)))
                doc.Father = vdoc;
              continue;
            }
          case 7630701:
            { // 'mot'
              if (dt == DataType.Null) { doc.Mother = null; continue; }
              if (dt != DataType.Doc) break;
              var vdoc = new Azos.Tests.Nub.Serialization.SimplePersonRow();
              if (Reader.TryReadRow(doc, vdoc, streamer, CodeGenerator.GetName(name)))
                doc.Mother = vdoc;
              continue;
            }
          case 7303778:
            { // 'bro'
              if (dt == DataType.Null) { doc.Brothers = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.Brothers = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.SimplePersonRow>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
          case 7563635:
            { // 'sis'
              if (dt == DataType.Null) { doc.Sisters = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.Sisters = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.SimplePersonRow>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
          case 7758945:
            { // 'adv'
              if (dt == DataType.Null) { doc.Advisers = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.Advisers = Reader.ReadRowList<Azos.Tests.Nub.Serialization.SimplePersonRow>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.AllArowTypesRow
  ///</summary>
  internal class AllArowTypesRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.AllArowTypesRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.AllArowTypesRow)aDoc;
      // 'bool1' = 212272639842
      AW.Write(streamer, 212272639842, doc.Bool1);
      // 'bool2' = 216567607138
      if (doc.Bool2.HasValue)
        AW.Write(streamer, 216567607138, doc.Bool2.Value);
      else AW.WriteNull(streamer, 216567607138);
      // 'bool3' = 220862574434
      if (doc.Bool3 != null)
        AW.Write(streamer, 220862574434, doc.Bool3);
      else AW.WriteNull(streamer, 220862574434);
      // 'bool4' = 225157541730
      if (doc.Bool4 != null)
        AW.Write(streamer, 225157541730, doc.Bool4);
      else AW.WriteNull(streamer, 225157541730);
      // 'char1' = 212372383843
      AW.Write(streamer, 212372383843, doc.Char1);
      // 'char2' = 216667351139
      if (doc.Char2.HasValue)
        AW.Write(streamer, 216667351139, doc.Char2.Value);
      else AW.WriteNull(streamer, 216667351139);
      // 'char3' = 220962318435
      if (doc.Char3 != null)
        AW.Write(streamer, 220962318435, doc.Char3);
      else AW.WriteNull(streamer, 220962318435);
      // 'char4' = 225257285731
      if (doc.Char4 != null)
        AW.Write(streamer, 225257285731, doc.Char4);
      else AW.WriteNull(streamer, 225257285731);
      // 'str1' = 829584499
      if (doc.String1 != null)
        AW.Write(streamer, 829584499, doc.String1);
      else AW.WriteNull(streamer, 829584499);
      // 'str3' = 863138931
      if (doc.String3 != null)
        AW.Write(streamer, 863138931, doc.String3);
      else AW.WriteNull(streamer, 863138931);
      // 'str4' = 879916147
      if (doc.String4 != null)
        AW.Write(streamer, 879916147, doc.String4);
      else AW.WriteNull(streamer, 879916147);
      // 'sngl1' = 212272115315
      AW.Write(streamer, 212272115315, doc.Float1);
      // 'sngl2' = 216567082611
      if (doc.Float2.HasValue)
        AW.Write(streamer, 216567082611, doc.Float2.Value);
      else AW.WriteNull(streamer, 216567082611);
      // 'sngl3' = 220862049907
      if (doc.Float3 != null)
        AW.Write(streamer, 220862049907, doc.Float3);
      else AW.WriteNull(streamer, 220862049907);
      // 'sngl4' = 225157017203
      if (doc.Float4 != null)
        AW.Write(streamer, 225157017203, doc.Float4);
      else AW.WriteNull(streamer, 225157017203);
      // 'dbl1' = 829186660
      AW.Write(streamer, 829186660, doc.Double1);
      // 'dbl2' = 845963876
      if (doc.Double2.HasValue)
        AW.Write(streamer, 845963876, doc.Double2.Value);
      else AW.WriteNull(streamer, 845963876);
      // 'dbl3' = 862741092
      if (doc.Double3 != null)
        AW.Write(streamer, 862741092, doc.Double3);
      else AW.WriteNull(streamer, 862741092);
      // 'dbl4' = 879518308
      if (doc.Double4 != null)
        AW.Write(streamer, 879518308, doc.Double4);
      else AW.WriteNull(streamer, 879518308);
      // 'dcml1' = 212272505700
      AW.Write(streamer, 212272505700, doc.Decimal1);
      // 'dcml2' = 216567472996
      if (doc.Decimal2.HasValue)
        AW.Write(streamer, 216567472996, doc.Decimal2.Value);
      else AW.WriteNull(streamer, 216567472996);
      // 'dcml3' = 220862440292
      if (doc.Decimal3 != null)
        AW.Write(streamer, 220862440292, doc.Decimal3);
      else AW.WriteNull(streamer, 220862440292);
      // 'dcml4' = 225157407588
      if (doc.Decimal4 != null)
        AW.Write(streamer, 225157407588, doc.Decimal4);
      else AW.WriteNull(streamer, 225157407588);
      // 'amt1' = 829713761
      AW.Write(streamer, 829713761, doc.Amount1);
      // 'amt2' = 846490977
      if (doc.Amount2.HasValue)
        AW.Write(streamer, 846490977, doc.Amount2.Value);
      else AW.WriteNull(streamer, 846490977);
      // 'amt3' = 863268193
      if (doc.Amount3 != null)
        AW.Write(streamer, 863268193, doc.Amount3);
      else AW.WriteNull(streamer, 863268193);
      // 'amt4' = 880045409
      if (doc.Amount4 != null)
        AW.Write(streamer, 880045409, doc.Amount4);
      else AW.WriteNull(streamer, 880045409);
      // 'byte1' = 212155529570
      AW.Write(streamer, 212155529570, doc.Byte1);
      // 'byte2' = 216450496866
      if (doc.Byte2.HasValue)
        AW.Write(streamer, 216450496866, doc.Byte2.Value);
      else AW.WriteNull(streamer, 216450496866);
      // 'byte3' = 220745464162
      if (doc.Byte3 != null)
        AW.Write(streamer, 220745464162, doc.Byte3);
      else AW.WriteNull(streamer, 220745464162);
      // 'byte4' = 225040431458
      if (doc.Byte4 != null)
        AW.Write(streamer, 225040431458, doc.Byte4);
      else AW.WriteNull(streamer, 225040431458);
      // 'sbyte1' = 54311815570035
      AW.Write(streamer, 54311815570035, doc.SByte1);
      // 'sbyte2' = 55411327197811
      if (doc.SByte2.HasValue)
        AW.Write(streamer, 55411327197811, doc.SByte2.Value);
      else AW.WriteNull(streamer, 55411327197811);
      // 'sbyte3' = 56510838825587
      if (doc.SByte3 != null)
        AW.Write(streamer, 56510838825587, doc.SByte3);
      else AW.WriteNull(streamer, 56510838825587);
      // 'sbyte4' = 57610350453363
      if (doc.SByte4 != null)
        AW.Write(streamer, 57610350453363, doc.SByte4);
      else AW.WriteNull(streamer, 57610350453363);
      // 'short1' = 54376205871219
      AW.Write(streamer, 54376205871219, doc.Short1);
      // 'short2' = 55475717498995
      if (doc.Short2.HasValue)
        AW.Write(streamer, 55475717498995, doc.Short2.Value);
      else AW.WriteNull(streamer, 55475717498995);
      // 'short3' = 56575229126771
      if (doc.Short3 != null)
        AW.Write(streamer, 56575229126771, doc.Short3);
      else AW.WriteNull(streamer, 56575229126771);
      // 'short4' = 57674740754547
      if (doc.Short4 != null)
        AW.Write(streamer, 57674740754547, doc.Short4);
      else AW.WriteNull(streamer, 57674740754547);
      // 'ushort1' = 13920308703032181
      AW.Write(streamer, 13920308703032181, doc.UShort1);
      // 'ushort2' = 14201783679742837
      if (doc.UShort2.HasValue)
        AW.Write(streamer, 14201783679742837, doc.UShort2.Value);
      else AW.WriteNull(streamer, 14201783679742837);
      // 'ushort3' = 14483258656453493
      if (doc.UShort3 != null)
        AW.Write(streamer, 14483258656453493, doc.UShort3);
      else AW.WriteNull(streamer, 14483258656453493);
      // 'ushort4' = 14764733633164149
      if (doc.UShort4 != null)
        AW.Write(streamer, 14764733633164149, doc.UShort4);
      else AW.WriteNull(streamer, 14764733633164149);
      // 'int1' = 829714025
      AW.Write(streamer, 829714025, doc.Int1);
      // 'int2' = 846491241
      if (doc.Int2.HasValue)
        AW.Write(streamer, 846491241, doc.Int2.Value);
      else AW.WriteNull(streamer, 846491241);
      // 'int3' = 863268457
      if (doc.Int3 != null)
        AW.Write(streamer, 863268457, doc.Int3);
      else AW.WriteNull(streamer, 863268457);
      // 'int4' = 880045673
      if (doc.Int4 != null)
        AW.Write(streamer, 880045673, doc.Int4);
      else AW.WriteNull(streamer, 880045673);
      // 'uint1' = 212406790517
      AW.Write(streamer, 212406790517, doc.UInt1);
      // 'uint2' = 216701757813
      if (doc.UInt2.HasValue)
        AW.Write(streamer, 216701757813, doc.UInt2.Value);
      else AW.WriteNull(streamer, 216701757813);
      // 'uint3' = 220996725109
      if (doc.UInt3 != null)
        AW.Write(streamer, 220996725109, doc.UInt3);
      else AW.WriteNull(streamer, 220996725109);
      // 'uint4' = 225291692405
      if (doc.UInt4 != null)
        AW.Write(streamer, 225291692405, doc.UInt4);
      else AW.WriteNull(streamer, 225291692405);
      // 'long1' = 212188688236
      AW.Write(streamer, 212188688236, doc.Long1);
      // 'long2' = 216483655532
      if (doc.Long2.HasValue)
        AW.Write(streamer, 216483655532, doc.Long2.Value);
      else AW.WriteNull(streamer, 216483655532);
      // 'long3' = 220778622828
      if (doc.Long3 != null)
        AW.Write(streamer, 220778622828, doc.Long3);
      else AW.WriteNull(streamer, 220778622828);
      // 'long4' = 225073590124
      if (doc.Long4 != null)
        AW.Write(streamer, 225073590124, doc.Long4);
      else AW.WriteNull(streamer, 225073590124);
      // 'ulong1' = 54320304188533
      AW.Write(streamer, 54320304188533, doc.ULong1);
      // 'ulong2' = 55419815816309
      if (doc.ULong2.HasValue)
        AW.Write(streamer, 55419815816309, doc.ULong2.Value);
      else AW.WriteNull(streamer, 55419815816309);
      // 'ulong3' = 56519327444085
      if (doc.ULong3 != null)
        AW.Write(streamer, 56519327444085, doc.ULong3);
      else AW.WriteNull(streamer, 56519327444085);
      // 'ulong4' = 57618839071861
      if (doc.ULong4 != null)
        AW.Write(streamer, 57618839071861, doc.ULong4);
      else AW.WriteNull(streamer, 57618839071861);
      // 'date1' = 212155523428
      AW.Write(streamer, 212155523428, doc.DateTime1);
      // 'date2' = 216450490724
      if (doc.DateTime2.HasValue)
        AW.Write(streamer, 216450490724, doc.DateTime2.Value);
      else AW.WriteNull(streamer, 216450490724);
      // 'date3' = 220745458020
      if (doc.DateTime3 != null)
        AW.Write(streamer, 220745458020, doc.DateTime3);
      else AW.WriteNull(streamer, 220745458020);
      // 'date4' = 225040425316
      if (doc.DateTime4 != null)
        AW.Write(streamer, 225040425316, doc.DateTime4);
      else AW.WriteNull(streamer, 225040425316);
      // 'ts1' = 3240820
      AW.Write(streamer, 3240820, doc.TimeSpan1);
      // 'ts2' = 3306356
      if (doc.TimeSpan2.HasValue)
        AW.Write(streamer, 3306356, doc.TimeSpan2.Value);
      else AW.WriteNull(streamer, 3306356);
      // 'ts3' = 3371892
      if (doc.TimeSpan3 != null)
        AW.Write(streamer, 3371892, doc.TimeSpan3);
      else AW.WriteNull(streamer, 3371892);
      // 'ts4' = 3437428
      if (doc.TimeSpan4 != null)
        AW.Write(streamer, 3437428, doc.TimeSpan4);
      else AW.WriteNull(streamer, 3437428);
      // 'guid1' = 212138030439
      AW.Write(streamer, 212138030439, doc.Guid1);
      // 'guid2' = 216432997735
      if (doc.Guid2.HasValue)
        AW.Write(streamer, 216432997735, doc.Guid2.Value);
      else AW.WriteNull(streamer, 216432997735);
      // 'guid3' = 220727965031
      if (doc.Guid3 != null)
        AW.Write(streamer, 220727965031, doc.Guid3);
      else AW.WriteNull(streamer, 220727965031);
      // 'guid4' = 225022932327
      if (doc.Guid4 != null)
        AW.Write(streamer, 225022932327, doc.Guid4);
      else AW.WriteNull(streamer, 225022932327);
      // 'gdid1' = 212138026087
      AW.Write(streamer, 212138026087, doc.GDID1);
      // 'gdid2' = 216432993383
      if (doc.GDID2.HasValue)
        AW.Write(streamer, 216432993383, doc.GDID2.Value);
      else AW.WriteNull(streamer, 216432993383);
      // 'gdid3' = 220727960679
      if (doc.GDID3 != null)
        AW.Write(streamer, 220727960679, doc.GDID3);
      else AW.WriteNull(streamer, 220727960679);
      // 'gdid4' = 225022927975
      if (doc.GDID4 != null)
        AW.Write(streamer, 225022927975, doc.GDID4);
      else AW.WriteNull(streamer, 225022927975);
      // 'fid1' = 828664166
      AW.Write(streamer, 828664166, doc.Fid1);
      // 'fid2' = 845441382
      if (doc.Fid2.HasValue)
        AW.Write(streamer, 845441382, doc.Fid2.Value);
      else AW.WriteNull(streamer, 845441382);
      // 'fid3' = 862218598
      if (doc.Fid3 != null)
        AW.Write(streamer, 862218598, doc.Fid3);
      else AW.WriteNull(streamer, 862218598);
      // 'fid4' = 878995814
      if (doc.Fid4 != null)
        AW.Write(streamer, 878995814, doc.Fid4);
      else AW.WriteNull(streamer, 878995814);
      // 'pp1' = 3240048
      AW.Write(streamer, 3240048, doc.PilePointer1);
      // 'pp2' = 3305584
      if (doc.PilePointer2.HasValue)
        AW.Write(streamer, 3305584, doc.PilePointer2.Value);
      else AW.WriteNull(streamer, 3305584);
      // 'pp3' = 3371120
      if (doc.PilePointer3 != null)
        AW.Write(streamer, 3371120, doc.PilePointer3);
      else AW.WriteNull(streamer, 3371120);
      // 'pp4' = 3436656
      if (doc.PilePointer4 != null)
        AW.Write(streamer, 3436656, doc.PilePointer4);
      else AW.WriteNull(streamer, 3436656);
      // 'nls1' = 829647982
      AW.Write(streamer, 829647982, doc.NLS1);
      // 'nls2' = 846425198
      if (doc.NLS2.HasValue)
        AW.Write(streamer, 846425198, doc.NLS2.Value);
      else AW.WriteNull(streamer, 846425198);
      // 'nls3' = 863202414
      if (doc.NLS3 != null)
        AW.Write(streamer, 863202414, doc.NLS3);
      else AW.WriteNull(streamer, 863202414);
      // 'nls4' = 879979630
      if (doc.NLS4 != null)
        AW.Write(streamer, 879979630, doc.NLS4);
      else AW.WriteNull(streamer, 879979630);
      // 'rarr' = 1920098674
      if (doc.RowArray != null)
        Writer.WriteRowArray(streamer, 1920098674, doc.RowArray);
      else AW.WriteNull(streamer, 1920098674);
      // 'rlst' = 1953721458
      if (doc.RowList != null)
        Writer.WriteRowArray(streamer, 1953721458, doc.RowList);
      else AW.WriteNull(streamer, 1953721458);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.AllArowTypesRow)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 212272639842:
            { // 'bool1'
              if (dt == DataType.Boolean) doc.Bool1 = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 216567607138:
            { // 'bool2'
              if (dt == DataType.Null) doc.Bool2 = null;
              else if (dt == DataType.Boolean) doc.Bool2 = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 220862574434:
            { // 'bool3'
              if (dt == DataType.Null) doc.Bool3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Boolean) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Boolean[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadBoolean(streamer);
                doc.Bool3 = arr;
              }
              continue;
            }
          case 225157541730:
            { // 'bool4'
              if (dt == DataType.Null) doc.Bool4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Boolean) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Boolean>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadBoolean(streamer));
                doc.Bool4 = lst;
              }
              continue;
            }
          case 212372383843:
            { // 'char1'
              if (dt == DataType.Char) doc.Char1 = Reader.ReadChar(streamer);
              else break;
              continue;
            }
          case 216667351139:
            { // 'char2'
              if (dt == DataType.Null) doc.Char2 = null;
              else if (dt == DataType.Char) doc.Char2 = Reader.ReadChar(streamer);
              else break;
              continue;
            }
          case 220962318435:
            { // 'char3'
              if (dt == DataType.Null) doc.Char3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Char) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Char[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadChar(streamer);
                doc.Char3 = arr;
              }
              continue;
            }
          case 225257285731:
            { // 'char4'
              if (dt == DataType.Null) doc.Char4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Char) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Char>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadChar(streamer));
                doc.Char4 = lst;
              }
              continue;
            }
          case 829584499:
            { // 'str1'
              if (dt == DataType.Null) doc.String1 = null;
              else if (dt == DataType.String) doc.String1 = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 863138931:
            { // 'str3'
              if (dt == DataType.Null) doc.String3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.String) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.String[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadString(streamer);
                doc.String3 = arr;
              }
              continue;
            }
          case 879916147:
            { // 'str4'
              if (dt == DataType.Null) doc.String4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.String) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.String>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadString(streamer));
                doc.String4 = lst;
              }
              continue;
            }
          case 212272115315:
            { // 'sngl1'
              if (dt == DataType.Single) doc.Float1 = Reader.ReadSingle(streamer);
              else break;
              continue;
            }
          case 216567082611:
            { // 'sngl2'
              if (dt == DataType.Null) doc.Float2 = null;
              else if (dt == DataType.Single) doc.Float2 = Reader.ReadSingle(streamer);
              else break;
              continue;
            }
          case 220862049907:
            { // 'sngl3'
              if (dt == DataType.Null) doc.Float3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Single) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Single[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadSingle(streamer);
                doc.Float3 = arr;
              }
              continue;
            }
          case 225157017203:
            { // 'sngl4'
              if (dt == DataType.Null) doc.Float4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Single) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Single>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadSingle(streamer));
                doc.Float4 = lst;
              }
              continue;
            }
          case 829186660:
            { // 'dbl1'
              if (dt == DataType.Double) doc.Double1 = Reader.ReadDouble(streamer);
              else break;
              continue;
            }
          case 845963876:
            { // 'dbl2'
              if (dt == DataType.Null) doc.Double2 = null;
              else if (dt == DataType.Double) doc.Double2 = Reader.ReadDouble(streamer);
              else break;
              continue;
            }
          case 862741092:
            { // 'dbl3'
              if (dt == DataType.Null) doc.Double3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Double) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Double[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadDouble(streamer);
                doc.Double3 = arr;
              }
              continue;
            }
          case 879518308:
            { // 'dbl4'
              if (dt == DataType.Null) doc.Double4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Double) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Double>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadDouble(streamer));
                doc.Double4 = lst;
              }
              continue;
            }
          case 212272505700:
            { // 'dcml1'
              if (dt == DataType.Decimal) doc.Decimal1 = Reader.ReadDecimal(streamer);
              else break;
              continue;
            }
          case 216567472996:
            { // 'dcml2'
              if (dt == DataType.Null) doc.Decimal2 = null;
              else if (dt == DataType.Decimal) doc.Decimal2 = Reader.ReadDecimal(streamer);
              else break;
              continue;
            }
          case 220862440292:
            { // 'dcml3'
              if (dt == DataType.Null) doc.Decimal3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Decimal) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Decimal[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadDecimal(streamer);
                doc.Decimal3 = arr;
              }
              continue;
            }
          case 225157407588:
            { // 'dcml4'
              if (dt == DataType.Null) doc.Decimal4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Decimal) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Decimal>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadDecimal(streamer));
                doc.Decimal4 = lst;
              }
              continue;
            }
          case 829713761:
            { // 'amt1'
              if (dt == DataType.Amount) doc.Amount1 = Reader.ReadAmount(streamer);
              else break;
              continue;
            }
          case 846490977:
            { // 'amt2'
              if (dt == DataType.Null) doc.Amount2 = null;
              else if (dt == DataType.Amount) doc.Amount2 = Reader.ReadAmount(streamer);
              else break;
              continue;
            }
          case 863268193:
            { // 'amt3'
              if (dt == DataType.Null) doc.Amount3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Amount) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new Azos.Financial.Amount[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadAmount(streamer);
                doc.Amount3 = arr;
              }
              continue;
            }
          case 880045409:
            { // 'amt4'
              if (dt == DataType.Null) doc.Amount4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Amount) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<Azos.Financial.Amount>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadAmount(streamer));
                doc.Amount4 = lst;
              }
              continue;
            }
          case 212155529570:
            { // 'byte1'
              if (dt == DataType.Byte) doc.Byte1 = Reader.ReadByte(streamer);
              else break;
              continue;
            }
          case 216450496866:
            { // 'byte2'
              if (dt == DataType.Null) doc.Byte2 = null;
              else if (dt == DataType.Byte) doc.Byte2 = Reader.ReadByte(streamer);
              else break;
              continue;
            }
          case 220745464162:
            { // 'byte3'

              if (dt == DataType.Null) doc.Byte3 = null;
              else if (dt == DataType.ByteArray) doc.Byte3 = streamer.ReadByteArray();
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Byte) break;
                doc.Byte3 = Reader.ReadByteArray(streamer);
              }
              continue;
            }
          case 225040431458:
            { // 'byte4'

              if (dt == DataType.Null) doc.Byte4 = null;
              else if (dt == DataType.ByteArray) doc.Byte4 = new List<byte>(streamer.ReadByteArray());
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Byte) break;
                doc.Byte4 = new List<byte>(Reader.ReadByteArray(streamer));
              }
              continue;
            }
          case 54311815570035:
            { // 'sbyte1'
              if (dt == DataType.SByte) doc.SByte1 = Reader.ReadSByte(streamer);
              else break;
              continue;
            }
          case 55411327197811:
            { // 'sbyte2'
              if (dt == DataType.Null) doc.SByte2 = null;
              else if (dt == DataType.SByte) doc.SByte2 = Reader.ReadSByte(streamer);
              else break;
              continue;
            }
          case 56510838825587:
            { // 'sbyte3'
              if (dt == DataType.Null) doc.SByte3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.SByte) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.SByte[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadSByte(streamer);
                doc.SByte3 = arr;
              }
              continue;
            }
          case 57610350453363:
            { // 'sbyte4'
              if (dt == DataType.Null) doc.SByte4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.SByte) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.SByte>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadSByte(streamer));
                doc.SByte4 = lst;
              }
              continue;
            }
          case 54376205871219:
            { // 'short1'
              if (dt == DataType.Int16) doc.Short1 = Reader.ReadInt16(streamer);
              else break;
              continue;
            }
          case 55475717498995:
            { // 'short2'
              if (dt == DataType.Null) doc.Short2 = null;
              else if (dt == DataType.Int16) doc.Short2 = Reader.ReadInt16(streamer);
              else break;
              continue;
            }
          case 56575229126771:
            { // 'short3'
              if (dt == DataType.Null) doc.Short3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int16) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Int16[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadInt16(streamer);
                doc.Short3 = arr;
              }
              continue;
            }
          case 57674740754547:
            { // 'short4'
              if (dt == DataType.Null) doc.Short4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int16) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Int16>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadInt16(streamer));
                doc.Short4 = lst;
              }
              continue;
            }
          case 13920308703032181:
            { // 'ushort1'
              if (dt == DataType.UInt16) doc.UShort1 = Reader.ReadUInt16(streamer);
              else break;
              continue;
            }
          case 14201783679742837:
            { // 'ushort2'
              if (dt == DataType.Null) doc.UShort2 = null;
              else if (dt == DataType.UInt16) doc.UShort2 = Reader.ReadUInt16(streamer);
              else break;
              continue;
            }
          case 14483258656453493:
            { // 'ushort3'
              if (dt == DataType.Null) doc.UShort3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt16) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.UInt16[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadUInt16(streamer);
                doc.UShort3 = arr;
              }
              continue;
            }
          case 14764733633164149:
            { // 'ushort4'
              if (dt == DataType.Null) doc.UShort4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt16) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.UInt16>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadUInt16(streamer));
                doc.UShort4 = lst;
              }
              continue;
            }
          case 829714025:
            { // 'int1'
              if (dt == DataType.Int32) doc.Int1 = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 846491241:
            { // 'int2'
              if (dt == DataType.Null) doc.Int2 = null;
              else if (dt == DataType.Int32) doc.Int2 = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 863268457:
            { // 'int3'
              if (dt == DataType.Null) doc.Int3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int32) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Int32[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadInt32(streamer);
                doc.Int3 = arr;
              }
              continue;
            }
          case 880045673:
            { // 'int4'
              if (dt == DataType.Null) doc.Int4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int32) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Int32>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadInt32(streamer));
                doc.Int4 = lst;
              }
              continue;
            }
          case 212406790517:
            { // 'uint1'
              if (dt == DataType.UInt32) doc.UInt1 = Reader.ReadUInt32(streamer);
              else break;
              continue;
            }
          case 216701757813:
            { // 'uint2'
              if (dt == DataType.Null) doc.UInt2 = null;
              else if (dt == DataType.UInt32) doc.UInt2 = Reader.ReadUInt32(streamer);
              else break;
              continue;
            }
          case 220996725109:
            { // 'uint3'
              if (dt == DataType.Null) doc.UInt3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt32) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.UInt32[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadUInt32(streamer);
                doc.UInt3 = arr;
              }
              continue;
            }
          case 225291692405:
            { // 'uint4'
              if (dt == DataType.Null) doc.UInt4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt32) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.UInt32>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadUInt32(streamer));
                doc.UInt4 = lst;
              }
              continue;
            }
          case 212188688236:
            { // 'long1'
              if (dt == DataType.Int64) doc.Long1 = Reader.ReadInt64(streamer);
              else break;
              continue;
            }
          case 216483655532:
            { // 'long2'
              if (dt == DataType.Null) doc.Long2 = null;
              else if (dt == DataType.Int64) doc.Long2 = Reader.ReadInt64(streamer);
              else break;
              continue;
            }
          case 220778622828:
            { // 'long3'
              if (dt == DataType.Null) doc.Long3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int64) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Int64[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadInt64(streamer);
                doc.Long3 = arr;
              }
              continue;
            }
          case 225073590124:
            { // 'long4'
              if (dt == DataType.Null) doc.Long4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Int64) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Int64>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadInt64(streamer));
                doc.Long4 = lst;
              }
              continue;
            }
          case 54320304188533:
            { // 'ulong1'
              if (dt == DataType.UInt64) doc.ULong1 = Reader.ReadUInt64(streamer);
              else break;
              continue;
            }
          case 55419815816309:
            { // 'ulong2'
              if (dt == DataType.Null) doc.ULong2 = null;
              else if (dt == DataType.UInt64) doc.ULong2 = Reader.ReadUInt64(streamer);
              else break;
              continue;
            }
          case 56519327444085:
            { // 'ulong3'
              if (dt == DataType.Null) doc.ULong3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt64) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.UInt64[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadUInt64(streamer);
                doc.ULong3 = arr;
              }
              continue;
            }
          case 57618839071861:
            { // 'ulong4'
              if (dt == DataType.Null) doc.ULong4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.UInt64) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.UInt64>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadUInt64(streamer));
                doc.ULong4 = lst;
              }
              continue;
            }
          case 212155523428:
            { // 'date1'
              if (dt == DataType.DateTime) doc.DateTime1 = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 216450490724:
            { // 'date2'
              if (dt == DataType.Null) doc.DateTime2 = null;
              else if (dt == DataType.DateTime) doc.DateTime2 = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 220745458020:
            { // 'date3'
              if (dt == DataType.Null) doc.DateTime3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.DateTime) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.DateTime[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadDateTime(streamer);
                doc.DateTime3 = arr;
              }
              continue;
            }
          case 225040425316:
            { // 'date4'
              if (dt == DataType.Null) doc.DateTime4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.DateTime) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.DateTime>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadDateTime(streamer));
                doc.DateTime4 = lst;
              }
              continue;
            }
          case 3240820:
            { // 'ts1'
              if (dt == DataType.TimeSpan) doc.TimeSpan1 = Reader.ReadTimeSpan(streamer);
              else break;
              continue;
            }
          case 3306356:
            { // 'ts2'
              if (dt == DataType.Null) doc.TimeSpan2 = null;
              else if (dt == DataType.TimeSpan) doc.TimeSpan2 = Reader.ReadTimeSpan(streamer);
              else break;
              continue;
            }
          case 3371892:
            { // 'ts3'
              if (dt == DataType.Null) doc.TimeSpan3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.TimeSpan) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.TimeSpan[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadTimeSpan(streamer);
                doc.TimeSpan3 = arr;
              }
              continue;
            }
          case 3437428:
            { // 'ts4'
              if (dt == DataType.Null) doc.TimeSpan4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.TimeSpan) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.TimeSpan>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadTimeSpan(streamer));
                doc.TimeSpan4 = lst;
              }
              continue;
            }
          case 212138030439:
            { // 'guid1'
              if (dt == DataType.Guid) doc.Guid1 = Reader.ReadGuid(streamer);
              else break;
              continue;
            }
          case 216432997735:
            { // 'guid2'
              if (dt == DataType.Null) doc.Guid2 = null;
              else if (dt == DataType.Guid) doc.Guid2 = Reader.ReadGuid(streamer);
              else break;
              continue;
            }
          case 220727965031:
            { // 'guid3'
              if (dt == DataType.Null) doc.Guid3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Guid) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Guid[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadGuid(streamer);
                doc.Guid3 = arr;
              }
              continue;
            }
          case 225022932327:
            { // 'guid4'
              if (dt == DataType.Null) doc.Guid4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Guid) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<System.Guid>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadGuid(streamer));
                doc.Guid4 = lst;
              }
              continue;
            }
          case 212138026087:
            { // 'gdid1'
              if (dt == DataType.GDID) doc.GDID1 = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 216432993383:
            { // 'gdid2'
              if (dt == DataType.Null) doc.GDID2 = null;
              else if (dt == DataType.GDID) doc.GDID2 = Reader.ReadGDID(streamer);
              else break;
              continue;
            }
          case 220727960679:
            { // 'gdid3'
              if (dt == DataType.Null) doc.GDID3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.GDID) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new Azos.Data.GDID[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadGDID(streamer);
                doc.GDID3 = arr;
              }
              continue;
            }
          case 225022927975:
            { // 'gdid4'
              if (dt == DataType.Null) doc.GDID4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.GDID) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<Azos.Data.GDID>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadGDID(streamer));
                doc.GDID4 = lst;
              }
              continue;
            }
          case 828664166:
            { // 'fid1'
              if (dt == DataType.FID) doc.Fid1 = Reader.ReadFID(streamer);
              else break;
              continue;
            }
          case 845441382:
            { // 'fid2'
              if (dt == DataType.Null) doc.Fid2 = null;
              else if (dt == DataType.FID) doc.Fid2 = Reader.ReadFID(streamer);
              else break;
              continue;
            }
          case 862218598:
            { // 'fid3'
              if (dt == DataType.Null) doc.Fid3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.FID) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new Azos.FID[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadFID(streamer);
                doc.Fid3 = arr;
              }
              continue;
            }
          case 878995814:
            { // 'fid4'
              if (dt == DataType.Null) doc.Fid4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.FID) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<Azos.FID>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadFID(streamer));
                doc.Fid4 = lst;
              }
              continue;
            }
          case 3240048:
            { // 'pp1'
              if (dt == DataType.PilePointer) doc.PilePointer1 = Reader.ReadPilePointer(streamer);
              else break;
              continue;
            }
          case 3305584:
            { // 'pp2'
              if (dt == DataType.Null) doc.PilePointer2 = null;
              else if (dt == DataType.PilePointer) doc.PilePointer2 = Reader.ReadPilePointer(streamer);
              else break;
              continue;
            }
          case 3371120:
            { // 'pp3'
              if (dt == DataType.Null) doc.PilePointer3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.PilePointer) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new Azos.Pile.PilePointer[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadPilePointer(streamer);
                doc.PilePointer3 = arr;
              }
              continue;
            }
          case 3436656:
            { // 'pp4'
              if (dt == DataType.Null) doc.PilePointer4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.PilePointer) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<Azos.Pile.PilePointer>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadPilePointer(streamer));
                doc.PilePointer4 = lst;
              }
              continue;
            }
          case 829647982:
            { // 'nls1'
              if (dt == DataType.NLSMap) doc.NLS1 = Reader.ReadNLSMap(streamer);
              else break;
              continue;
            }
          case 846425198:
            { // 'nls2'
              if (dt == DataType.Null) doc.NLS2 = null;
              else if (dt == DataType.NLSMap) doc.NLS2 = Reader.ReadNLSMap(streamer);
              else break;
              continue;
            }
          case 863202414:
            { // 'nls3'
              if (dt == DataType.Null) doc.NLS3 = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.NLSMap) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new Azos.Serialization.JSON.NLSMap[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadNLSMap(streamer);
                doc.NLS3 = arr;
              }
              continue;
            }
          case 879979630:
            { // 'nls4'
              if (dt == DataType.Null) doc.NLS4 = null;
              if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.NLSMap) break;
                var len = Reader.ReadArrayLength(streamer);
                var lst = new List<Azos.Serialization.JSON.NLSMap>(len);
                for (var i = 0; i < len; i++) lst.Add(Reader.ReadNLSMap(streamer));
                doc.NLS4 = lst;
              }
              continue;
            }
          case 1920098674:
            { // 'rarr'
              if (dt == DataType.Null) { doc.RowArray = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.RowArray = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.AllArowTypesRow>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
          case 1953721458:
            { // 'rlst'
              if (dt == DataType.Null) { doc.RowList = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.RowList = Reader.ReadRowList<Azos.Tests.Nub.Serialization.AllArowTypesRow>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.Ver1Row
  ///</summary>
  internal class Ver1Row_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.Ver1Row), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.Ver1Row)aDoc;
      // 'a' = 97
      if (doc.A != null)
        AW.Write(streamer, 97, doc.A);
      else AW.WriteNull(streamer, 97);
      // 'b' = 98
      AW.Write(streamer, 98, doc.B);
      // 'c' = 99
      if (doc.C.HasValue)
        AW.Write(streamer, 99, doc.C.Value);
      else AW.WriteNull(streamer, 99);
      // 'd' = 100
      if (doc.D.HasValue)
        AW.Write(streamer, 100, doc.D.Value);
      else AW.WriteNull(streamer, 100);
      // 'e' = 101
      if (doc.E != null)
        AW.Write(streamer, 101, doc.E);
      else AW.WriteNull(streamer, 101);
      // 'f' = 102
      AW.Write(streamer, 102, doc.F);
      // 'g' = 103
      if (doc.G != null)
        Writer.WriteRowArray(streamer, 103, doc.G);
      else AW.WriteNull(streamer, 103);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.Ver1Row)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 97:
            { // 'a'
              if (dt == DataType.Null) doc.A = null;
              else if (dt == DataType.String) doc.A = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 98:
            { // 'b'
              if (dt == DataType.Int32) doc.B = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 99:
            { // 'c'
              if (dt == DataType.Null) doc.C = null;
              else if (dt == DataType.Int32) doc.C = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 100:
            { // 'd'
              if (dt == DataType.Null) doc.D = null;
              else if (dt == DataType.Boolean) doc.D = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 101:
            { // 'e'

              if (dt == DataType.Null) doc.E = null;
              else if (dt == DataType.ByteArray) doc.E = streamer.ReadByteArray();
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Byte) break;
                doc.E = Reader.ReadByteArray(streamer);
              }
              continue;
            }
          case 102:
            { // 'f'
              if (dt == DataType.DateTime) doc.F = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 103:
            { // 'g'
              if (dt == DataType.Null) { doc.G = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.G = Reader.ReadRowList<Azos.Tests.Nub.Serialization.Ver1Row>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.Ver2Row
  ///</summary>
  internal class Ver2Row_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
      ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.Ver2Row), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aDoc, WritingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.Ver2Row)aDoc;
      // 'a' = 97
      if (doc.A != null)
        AW.Write(streamer, 97, doc.A);
      else AW.WriteNull(streamer, 97);
      // 'be' = 25954
      AW.Write(streamer, 25954, doc.B);
      // 'ce' = 25955
      if (doc.C.HasValue)
        AW.Write(streamer, 25955, doc.C.Value);
      else AW.WriteNull(streamer, 25955);
      // 'd' = 100
      AW.Write(streamer, 100, doc.D);
      // 'e' = 101
      if (doc.E != null)
        AW.Write(streamer, 101, doc.E);
      else AW.WriteNull(streamer, 101);
      // 'f' = 102
      if (doc.F.HasValue)
        AW.Write(streamer, 102, doc.F.Value);
      else AW.WriteNull(streamer, 102);
      // 'ge' = 25959
      if (doc.G != null)
        Writer.WriteRowArray(streamer, 25959, doc.G);
      else AW.WriteNull(streamer, 25959);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aDoc, ReadingStreamer streamer)
    {
      var doc = (Azos.Tests.Nub.Serialization.Ver2Row)aDoc;
      while (true)
      {
        var name = Reader.ReadName(streamer);
        if (name == 0) break;//EODoc
        var dt = Reader.ReadDataType(streamer);
        DataType? atp = null;
        switch (name)
        {
          case 97:
            { // 'a'
              if (dt == DataType.Null) doc.A = null;
              else if (dt == DataType.String) doc.A = Reader.ReadString(streamer);
              else break;
              continue;
            }
          case 25954:
            { // 'be'
              if (dt == DataType.Int32) doc.B = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 25955:
            { // 'ce'
              if (dt == DataType.Null) doc.C = null;
              else if (dt == DataType.Int32) doc.C = Reader.ReadInt32(streamer);
              else break;
              continue;
            }
          case 100:
            { // 'd'
              if (dt == DataType.Boolean) doc.D = Reader.ReadBoolean(streamer);
              else break;
              continue;
            }
          case 101:
            { // 'e'
              if (dt == DataType.Null) doc.E = null;
              else if (dt != DataType.Array) break;
              else
              {
                atp = Reader.ReadDataType(streamer);
                if (atp != DataType.Char) break;
                var len = Reader.ReadArrayLength(streamer);
                var arr = new System.Char[len];
                for (var i = 0; i < len; i++) arr[i] = Reader.ReadChar(streamer);
                doc.E = arr;
              }
              continue;
            }
          case 102:
            { // 'f'
              if (dt == DataType.Null) doc.F = null;
              else if (dt == DataType.DateTime) doc.F = Reader.ReadDateTime(streamer);
              else break;
              continue;
            }
          case 25959:
            { // 'ge'
              if (dt == DataType.Null) { doc.G = null; continue; }
              if (dt != DataType.Array) break;
              atp = Reader.ReadDataType(streamer);
              if (atp != DataType.Doc) break;
              doc.G = Reader.ReadRowList<Azos.Tests.Nub.Serialization.Ver2Row>(doc, streamer, CodeGenerator.GetName(name));
              continue;
            }
        }
        Reader.ConsumeUnmatched(doc, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

}//namespace


//EOF
