/*<FILE_LICENSE>
 * Azos (A to Z Application Operating System) Framework
 * The A to Z Foundation (a.k.a. Azist) licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
</FILE_LICENSE>*/
// Do not mofify by hand. This file is auto-generated by Arow generator
// Generated on 10/28/2018 9:08:12 PM by Anton at OCTOD
// Framework: [37016962] by Anton@OCTOD:Win32NT on 10/22/2018 3:01:12 AM UTC

using System;
using System.Collections.Generic;

using Azos.IO;
using Azos.Data;
using Azos.Serialization.Arow;
using AW = Azos.Serialization.Arow.Writer;

namespace Azos.Tests.Nub.Serialization.Arow
{
  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.SimplePersonRow
  ///</summary>
  internal class SimplePersonRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.SimplePersonRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.SimplePersonRow)aRow;
      // 'id' = 26980
      AW.Write(streamer, 26980, row.ID);
      // 'name' = 1851878757
      if (row.Name != null)
      AW.Write(streamer, 1851878757, row.Name);
      else AW.WriteNull(streamer, 1851878757);
      // 'age' = 6383461
      AW.Write(streamer, 6383461, row.Age);
      // 'b1' = 25137
      AW.Write(streamer, 25137, row.Bool1);
      // 's1' = 29489
      if (row.Str1 != null)
      AW.Write(streamer, 29489, row.Str1);
      else AW.WriteNull(streamer, 29489);
      // 's2' = 29490
      if (row.Str2 != null)
      AW.Write(streamer, 29490, row.Str2);
      else AW.WriteNull(streamer, 29490);
      // 'd1' = 25649
      AW.Write(streamer, 25649, row.Date);
      // 'slr' = 7564402
      AW.Write(streamer, 7564402, row.Salary);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.SimplePersonRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 26980: { // 'id'
           if (dt==DataType.GDID) row.ID = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 1851878757: { // 'name'
           if (dt==DataType.Null) row.Name = null;
           else if (dt==DataType.String) row.Name = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 6383461: { // 'age'
           if (dt==DataType.Int32) row.Age = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 25137: { // 'b1'
           if (dt==DataType.Boolean) row.Bool1 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 29489: { // 's1'
           if (dt==DataType.Null) row.Str1 = null;
           else if (dt==DataType.String) row.Str1 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 29490: { // 's2'
           if (dt==DataType.Null) row.Str2 = null;
           else if (dt==DataType.String) row.Str2 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 25649: { // 'd1'
           if (dt==DataType.DateTime) row.Date = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 7564402: { // 'slr'
           if (dt==DataType.Double) row.Salary = Reader.ReadDouble(streamer);
           else break;
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow
  ///</summary>
  internal class SimplePersonWithEnumRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow)aRow;
      // 'id' = 26980
      AW.Write(streamer, 26980, row.ID);
      // 'name' = 1851878757
      if (row.Name != null)
      AW.Write(streamer, 1851878757, row.Name);
      else AW.WriteNull(streamer, 1851878757);
      // 'age' = 6383461
      AW.Write(streamer, 6383461, row.Age);
      // 'b1' = 25137
      AW.Write(streamer, 25137, row.Bool1);
      // 's1' = 29489
      if (row.Str1 != null)
      AW.Write(streamer, 29489, row.Str1);
      else AW.WriteNull(streamer, 29489);
      // 's2' = 29490
      if (row.Str2 != null)
      AW.Write(streamer, 29490, row.Str2);
      else AW.WriteNull(streamer, 29490);
      // 'd1' = 25649
      AW.Write(streamer, 25649, row.Date);
      // 'slr' = 7564402
      AW.Write(streamer, 7564402, row.Salary);
      // 'mar' = 7168370
      Writer.Write(streamer, 7168370, (int)row.Married);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.SimplePersonWithEnumRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 26980: { // 'id'
           if (dt==DataType.GDID) row.ID = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 1851878757: { // 'name'
           if (dt==DataType.Null) row.Name = null;
           else if (dt==DataType.String) row.Name = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 6383461: { // 'age'
           if (dt==DataType.Int32) row.Age = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 25137: { // 'b1'
           if (dt==DataType.Boolean) row.Bool1 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 29489: { // 's1'
           if (dt==DataType.Null) row.Str1 = null;
           else if (dt==DataType.String) row.Str1 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 29490: { // 's2'
           if (dt==DataType.Null) row.Str2 = null;
           else if (dt==DataType.String) row.Str2 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 25649: { // 'd1'
           if (dt==DataType.DateTime) row.Date = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 7564402: { // 'slr'
           if (dt==DataType.Double) row.Salary = Reader.ReadDouble(streamer);
           else break;
           continue;
                     }
           case 7168370: { // 'mar'
           if (dt!=DataType.Int32) break;
           var ev = (@Azos.@Tests.@Nub.@Serialization.@SimplePersonWithEnumRow.@MaritalStatus)Reader.ReadInt32(streamer);
           row.Married = ev;
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.FamilyRow
  ///</summary>
  internal class FamilyRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.FamilyRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.FamilyRow)aRow;
      // 'id' = 26980
      AW.Write(streamer, 26980, row.ID);
      // 'fam' = 6709613
      if (row.Name != null)
      AW.Write(streamer, 6709613, row.Name);
      else AW.WriteNull(streamer, 6709613);
      // 'reg' = 7497063
      AW.Write(streamer, 7497063, row.RegisteredToVote);
      // 'fat' = 6709620
      if (row.Father != null)
      Writer.WriteRow(streamer, 6709620, row.Father);
      else AW.WriteNull(streamer, 6709620);
      // 'mot' = 7171956
      if (row.Mother != null)
      Writer.WriteRow(streamer, 7171956, row.Mother);
      else AW.WriteNull(streamer, 7171956);
      // 'bro' = 6451823
      if (row.Brothers != null)
      Writer.WriteRowArray(streamer, 6451823, row.Brothers);
      else AW.WriteNull(streamer, 6451823);
      // 'sis' = 7563635
      if (row.Sisters != null)
      Writer.WriteRowArray(streamer, 7563635, row.Sisters);
      else AW.WriteNull(streamer, 7563635);
      // 'adv' = 6382710
      if (row.Advisers != null)
      Writer.WriteRowArray(streamer, 6382710, row.Advisers);
      else AW.WriteNull(streamer, 6382710);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.FamilyRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 26980: { // 'id'
           if (dt==DataType.GDID) row.ID = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 6709613: { // 'fam'
           if (dt==DataType.Null) row.Name = null;
           else if (dt==DataType.String) row.Name = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 7497063: { // 'reg'
           if (dt==DataType.Boolean) row.RegisteredToVote = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 6709620: { // 'fat'
           if (dt==DataType.Null) { row.Father = null; continue;}
           if (dt!=DataType.Doc) break;
           var vrow = new Azos.Tests.Nub.Serialization.SimplePersonRow();
           if (Reader.TryReadRow(row, vrow, streamer, CodeGenerator.GetName(name)))
             row.Father = vrow;
           continue;
                     }
           case 7171956: { // 'mot'
           if (dt==DataType.Null) { row.Mother = null; continue;}
           if (dt!=DataType.Doc) break;
           var vrow = new Azos.Tests.Nub.Serialization.SimplePersonRow();
           if (Reader.TryReadRow(row, vrow, streamer, CodeGenerator.GetName(name)))
             row.Mother = vrow;
           continue;
                     }
           case 6451823: { // 'bro'
           if (dt==DataType.Null) { row.Brothers = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.Brothers = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
           case 7563635: { // 'sis'
           if (dt==DataType.Null) { row.Sisters = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.Sisters = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
           case 6382710: { // 'adv'
           if (dt==DataType.Null) { row.Advisers = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.Advisers = Reader.ReadRowList<Azos.Tests.Nub.Serialization.SimplePersonRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.AllArowTypesRow
  ///</summary>
  internal class AllArowTypesRow_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.AllArowTypesRow), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.AllArowTypesRow)aRow;
      // 'bool1' = 422776368177
      AW.Write(streamer, 422776368177, row.Bool1);
      // 'bool2' = 422776368178
      if (row.Bool2.HasValue)
      AW.Write(streamer, 422776368178, row.Bool2.Value);
      else AW.WriteNull(streamer, 422776368178);
      // 'bool3' = 422776368179
      if (row.Bool3 != null)
      AW.Write(streamer, 422776368179, row.Bool3);
      else AW.WriteNull(streamer, 422776368179);
      // 'bool4' = 422776368180
      if (row.Bool4 != null)
      AW.Write(streamer, 422776368180, row.Bool4);
      else AW.WriteNull(streamer, 422776368180);
      // 'char1' = 426952978993
      AW.Write(streamer, 426952978993, row.Char1);
      // 'char2' = 426952978994
      if (row.Char2.HasValue)
      AW.Write(streamer, 426952978994, row.Char2.Value);
      else AW.WriteNull(streamer, 426952978994);
      // 'char3' = 426952978995
      if (row.Char3 != null)
      AW.Write(streamer, 426952978995, row.Char3);
      else AW.WriteNull(streamer, 426952978995);
      // 'char4' = 426952978996
      if (row.Char4 != null)
      AW.Write(streamer, 426952978996, row.Char4);
      else AW.WriteNull(streamer, 426952978996);
      // 'str1' = 1937011249
      if (row.String1 != null)
      AW.Write(streamer, 1937011249, row.String1);
      else AW.WriteNull(streamer, 1937011249);
      // 'str3' = 1937011251
      if (row.String3 != null)
      AW.Write(streamer, 1937011251, row.String3);
      else AW.WriteNull(streamer, 1937011251);
      // 'str4' = 1937011252
      if (row.String4 != null)
      AW.Write(streamer, 1937011252, row.String4);
      else AW.WriteNull(streamer, 1937011252);
      // 'sngl1' = 495773510705
      AW.Write(streamer, 495773510705, row.Float1);
      // 'sngl2' = 495773510706
      if (row.Float2.HasValue)
      AW.Write(streamer, 495773510706, row.Float2.Value);
      else AW.WriteNull(streamer, 495773510706);
      // 'sngl3' = 495773510707
      if (row.Float3 != null)
      AW.Write(streamer, 495773510707, row.Float3);
      else AW.WriteNull(streamer, 495773510707);
      // 'sngl4' = 495773510708
      if (row.Float4 != null)
      AW.Write(streamer, 495773510708, row.Float4);
      else AW.WriteNull(streamer, 495773510708);
      // 'dbl1' = 1684171825
      AW.Write(streamer, 1684171825, row.Double1);
      // 'dbl2' = 1684171826
      if (row.Double2.HasValue)
      AW.Write(streamer, 1684171826, row.Double2.Value);
      else AW.WriteNull(streamer, 1684171826);
      // 'dbl3' = 1684171827
      if (row.Double3 != null)
      AW.Write(streamer, 1684171827, row.Double3);
      else AW.WriteNull(streamer, 1684171827);
      // 'dbl4' = 1684171828
      if (row.Double4 != null)
      AW.Write(streamer, 1684171828, row.Double4);
      else AW.WriteNull(streamer, 1684171828);
      // 'dcml1' = 431164845105
      AW.Write(streamer, 431164845105, row.Decimal1);
      // 'dcml2' = 431164845106
      if (row.Decimal2.HasValue)
      AW.Write(streamer, 431164845106, row.Decimal2.Value);
      else AW.WriteNull(streamer, 431164845106);
      // 'dcml3' = 431164845107
      if (row.Decimal3 != null)
      AW.Write(streamer, 431164845107, row.Decimal3);
      else AW.WriteNull(streamer, 431164845107);
      // 'dcml4' = 431164845108
      if (row.Decimal4 != null)
      AW.Write(streamer, 431164845108, row.Decimal4);
      else AW.WriteNull(streamer, 431164845108);
      // 'amt1' = 1634563121
      AW.Write(streamer, 1634563121, row.Amount1);
      // 'amt2' = 1634563122
      if (row.Amount2.HasValue)
      AW.Write(streamer, 1634563122, row.Amount2.Value);
      else AW.WriteNull(streamer, 1634563122);
      // 'amt3' = 1634563123
      if (row.Amount3 != null)
      AW.Write(streamer, 1634563123, row.Amount3);
      else AW.WriteNull(streamer, 1634563123);
      // 'amt4' = 1634563124
      if (row.Amount4 != null)
      AW.Write(streamer, 1634563124, row.Amount4);
      else AW.WriteNull(streamer, 1634563124);
      // 'byte1' = 422944466225
      AW.Write(streamer, 422944466225, row.Byte1);
      // 'byte2' = 422944466226
      if (row.Byte2.HasValue)
      AW.Write(streamer, 422944466226, row.Byte2.Value);
      else AW.WriteNull(streamer, 422944466226);
      // 'byte3' = 422944466227
      if (row.Byte3 != null)
      AW.Write(streamer, 422944466227, row.Byte3);
      else AW.WriteNull(streamer, 422944466227);
      // 'byte4' = 422944466228
      if (row.Byte4 != null)
      AW.Write(streamer, 422944466228, row.Byte4);
      else AW.WriteNull(streamer, 422944466228);
      // 'sbyte1' = 126866781660465
      AW.Write(streamer, 126866781660465, row.SByte1);
      // 'sbyte2' = 126866781660466
      if (row.SByte2.HasValue)
      AW.Write(streamer, 126866781660466, row.SByte2.Value);
      else AW.WriteNull(streamer, 126866781660466);
      // 'sbyte3' = 126866781660467
      if (row.SByte3 != null)
      AW.Write(streamer, 126866781660467, row.SByte3);
      else AW.WriteNull(streamer, 126866781660467);
      // 'sbyte4' = 126866781660468
      if (row.SByte4 != null)
      AW.Write(streamer, 126866781660468, row.SByte4);
      else AW.WriteNull(streamer, 126866781660468);
      // 'short1' = 126892383564849
      AW.Write(streamer, 126892383564849, row.Short1);
      // 'short2' = 126892383564850
      if (row.Short2.HasValue)
      AW.Write(streamer, 126892383564850, row.Short2.Value);
      else AW.WriteNull(streamer, 126892383564850);
      // 'short3' = 126892383564851
      if (row.Short3 != null)
      AW.Write(streamer, 126892383564851, row.Short3);
      else AW.WriteNull(streamer, 126892383564851);
      // 'short4' = 126892383564852
      if (row.Short4 != null)
      AW.Write(streamer, 126892383564852, row.Short4);
      else AW.WriteNull(streamer, 126892383564852);
      // 'ushort1' = 33059464658711601
      AW.Write(streamer, 33059464658711601, row.UShort1);
      // 'ushort2' = 33059464658711602
      if (row.UShort2.HasValue)
      AW.Write(streamer, 33059464658711602, row.UShort2.Value);
      else AW.WriteNull(streamer, 33059464658711602);
      // 'ushort3' = 33059464658711603
      if (row.UShort3 != null)
      AW.Write(streamer, 33059464658711603, row.UShort3);
      else AW.WriteNull(streamer, 33059464658711603);
      // 'ushort4' = 33059464658711604
      if (row.UShort4 != null)
      AW.Write(streamer, 33059464658711604, row.UShort4);
      else AW.WriteNull(streamer, 33059464658711604);
      // 'int1' = 1768846385
      AW.Write(streamer, 1768846385, row.Int1);
      // 'int2' = 1768846386
      if (row.Int2.HasValue)
      AW.Write(streamer, 1768846386, row.Int2.Value);
      else AW.WriteNull(streamer, 1768846386);
      // 'int3' = 1768846387
      if (row.Int3 != null)
      AW.Write(streamer, 1768846387, row.Int3);
      else AW.WriteNull(streamer, 1768846387);
      // 'int4' = 1768846388
      if (row.Int4 != null)
      AW.Write(streamer, 1768846388, row.Int4);
      else AW.WriteNull(streamer, 1768846388);
      // 'uint1' = 504280020017
      AW.Write(streamer, 504280020017, row.UInt1);
      // 'uint2' = 504280020018
      if (row.UInt2.HasValue)
      AW.Write(streamer, 504280020018, row.UInt2.Value);
      else AW.WriteNull(streamer, 504280020018);
      // 'uint3' = 504280020019
      if (row.UInt3 != null)
      AW.Write(streamer, 504280020019, row.UInt3);
      else AW.WriteNull(streamer, 504280020019);
      // 'uint4' = 504280020020
      if (row.UInt4 != null)
      AW.Write(streamer, 504280020020, row.UInt4);
      else AW.WriteNull(streamer, 504280020020);
      // 'long1' = 465725974321
      AW.Write(streamer, 465725974321, row.Long1);
      // 'long2' = 465725974322
      if (row.Long2.HasValue)
      AW.Write(streamer, 465725974322, row.Long2.Value);
      else AW.WriteNull(streamer, 465725974322);
      // 'long3' = 465725974323
      if (row.Long3 != null)
      AW.Write(streamer, 465725974323, row.Long3);
      else AW.WriteNull(streamer, 465725974323);
      // 'long4' = 465725974324
      if (row.Long4 != null)
      AW.Write(streamer, 465725974324, row.Long4);
      else AW.WriteNull(streamer, 465725974324);
      // 'ulong1' = 129108586424113
      AW.Write(streamer, 129108586424113, row.ULong1);
      // 'ulong2' = 129108586424114
      if (row.ULong2.HasValue)
      AW.Write(streamer, 129108586424114, row.ULong2.Value);
      else AW.WriteNull(streamer, 129108586424114);
      // 'ulong3' = 129108586424115
      if (row.ULong3 != null)
      AW.Write(streamer, 129108586424115, row.ULong3);
      else AW.WriteNull(streamer, 129108586424115);
      // 'ulong4' = 129108586424116
      if (row.ULong4 != null)
      AW.Write(streamer, 129108586424116, row.ULong4);
      else AW.WriteNull(streamer, 129108586424116);
      // 'date1' = 431131747633
      AW.Write(streamer, 431131747633, row.DateTime1);
      // 'date2' = 431131747634
      if (row.DateTime2.HasValue)
      AW.Write(streamer, 431131747634, row.DateTime2.Value);
      else AW.WriteNull(streamer, 431131747634);
      // 'date3' = 431131747635
      if (row.DateTime3 != null)
      AW.Write(streamer, 431131747635, row.DateTime3);
      else AW.WriteNull(streamer, 431131747635);
      // 'date4' = 431131747636
      if (row.DateTime4 != null)
      AW.Write(streamer, 431131747636, row.DateTime4);
      else AW.WriteNull(streamer, 431131747636);
      // 'ts1' = 7631665
      AW.Write(streamer, 7631665, row.TimeSpan1);
      // 'ts2' = 7631666
      if (row.TimeSpan2.HasValue)
      AW.Write(streamer, 7631666, row.TimeSpan2.Value);
      else AW.WriteNull(streamer, 7631666);
      // 'ts3' = 7631667
      if (row.TimeSpan3 != null)
      AW.Write(streamer, 7631667, row.TimeSpan3);
      else AW.WriteNull(streamer, 7631667);
      // 'ts4' = 7631668
      if (row.TimeSpan4 != null)
      AW.Write(streamer, 7631668, row.TimeSpan4);
      else AW.WriteNull(streamer, 7631668);
      // 'guid1' = 444351472689
      AW.Write(streamer, 444351472689, row.Guid1);
      // 'guid2' = 444351472690
      if (row.Guid2.HasValue)
      AW.Write(streamer, 444351472690, row.Guid2.Value);
      else AW.WriteNull(streamer, 444351472690);
      // 'guid3' = 444351472691
      if (row.Guid3 != null)
      AW.Write(streamer, 444351472691, row.Guid3);
      else AW.WriteNull(streamer, 444351472691);
      // 'guid4' = 444351472692
      if (row.Guid4 != null)
      AW.Write(streamer, 444351472692, row.Guid4);
      else AW.WriteNull(streamer, 444351472692);
      // 'gdid1' = 444066260017
      AW.Write(streamer, 444066260017, row.GDID1);
      // 'gdid2' = 444066260018
      if (row.GDID2.HasValue)
      AW.Write(streamer, 444066260018, row.GDID2.Value);
      else AW.WriteNull(streamer, 444066260018);
      // 'gdid3' = 444066260019
      if (row.GDID3 != null)
      AW.Write(streamer, 444066260019, row.GDID3);
      else AW.WriteNull(streamer, 444066260019);
      // 'gdid4' = 444066260020
      if (row.GDID4 != null)
      AW.Write(streamer, 444066260020, row.GDID4);
      else AW.WriteNull(streamer, 444066260020);
      // 'fid1' = 1718182961
      AW.Write(streamer, 1718182961, row.Fid1);
      // 'fid2' = 1718182962
      if (row.Fid2.HasValue)
      AW.Write(streamer, 1718182962, row.Fid2.Value);
      else AW.WriteNull(streamer, 1718182962);
      // 'fid3' = 1718182963
      if (row.Fid3 != null)
      AW.Write(streamer, 1718182963, row.Fid3);
      else AW.WriteNull(streamer, 1718182963);
      // 'fid4' = 1718182964
      if (row.Fid4 != null)
      AW.Write(streamer, 1718182964, row.Fid4);
      else AW.WriteNull(streamer, 1718182964);
      // 'pp1' = 7368753
      AW.Write(streamer, 7368753, row.PilePointer1);
      // 'pp2' = 7368754
      if (row.PilePointer2.HasValue)
      AW.Write(streamer, 7368754, row.PilePointer2.Value);
      else AW.WriteNull(streamer, 7368754);
      // 'pp3' = 7368755
      if (row.PilePointer3 != null)
      AW.Write(streamer, 7368755, row.PilePointer3);
      else AW.WriteNull(streamer, 7368755);
      // 'pp4' = 7368756
      if (row.PilePointer4 != null)
      AW.Write(streamer, 7368756, row.PilePointer4);
      else AW.WriteNull(streamer, 7368756);
      // 'nls1' = 1852601137
      AW.Write(streamer, 1852601137, row.NLS1);
      // 'nls2' = 1852601138
      if (row.NLS2.HasValue)
      AW.Write(streamer, 1852601138, row.NLS2.Value);
      else AW.WriteNull(streamer, 1852601138);
      // 'nls3' = 1852601139
      if (row.NLS3 != null)
      AW.Write(streamer, 1852601139, row.NLS3);
      else AW.WriteNull(streamer, 1852601139);
      // 'nls4' = 1852601140
      if (row.NLS4 != null)
      AW.Write(streamer, 1852601140, row.NLS4);
      else AW.WriteNull(streamer, 1852601140);
      // 'rarr' = 1918988914
      if (row.RowArray != null)
      Writer.WriteRowArray(streamer, 1918988914, row.RowArray);
      else AW.WriteNull(streamer, 1918988914);
      // 'rlst' = 1919710068
      if (row.RowList != null)
      Writer.WriteRowArray(streamer, 1919710068, row.RowList);
      else AW.WriteNull(streamer, 1919710068);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.AllArowTypesRow)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 422776368177: { // 'bool1'
           if (dt==DataType.Boolean) row.Bool1 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 422776368178: { // 'bool2'
           if (dt==DataType.Null) row.Bool2 = null;
           else if (dt==DataType.Boolean) row.Bool2 = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 422776368179: { // 'bool3'
           if (dt==DataType.Null) row.Bool3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Boolean) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Boolean[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadBoolean(streamer);
              row.Bool3 = arr;
           }
           continue;
                     }
           case 422776368180: { // 'bool4'
           if (dt==DataType.Null) row.Bool4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Boolean) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Boolean>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadBoolean(streamer) );
              row.Bool4 = lst;
           }
           continue;
                     }
           case 426952978993: { // 'char1'
           if (dt==DataType.Char) row.Char1 = Reader.ReadChar(streamer);
           else break;
           continue;
                     }
           case 426952978994: { // 'char2'
           if (dt==DataType.Null) row.Char2 = null;
           else if (dt==DataType.Char) row.Char2 = Reader.ReadChar(streamer);
           else break;
           continue;
                     }
           case 426952978995: { // 'char3'
           if (dt==DataType.Null) row.Char3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Char) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Char[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadChar(streamer);
              row.Char3 = arr;
           }
           continue;
                     }
           case 426952978996: { // 'char4'
           if (dt==DataType.Null) row.Char4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Char) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Char>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadChar(streamer) );
              row.Char4 = lst;
           }
           continue;
                     }
           case 1937011249: { // 'str1'
           if (dt==DataType.Null) row.String1 = null;
           else if (dt==DataType.String) row.String1 = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 1937011251: { // 'str3'
           if (dt==DataType.Null) row.String3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.String) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.String[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadString(streamer);
              row.String3 = arr;
           }
           continue;
                     }
           case 1937011252: { // 'str4'
           if (dt==DataType.Null) row.String4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.String) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.String>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadString(streamer) );
              row.String4 = lst;
           }
           continue;
                     }
           case 495773510705: { // 'sngl1'
           if (dt==DataType.Single) row.Float1 = Reader.ReadSingle(streamer);
           else break;
           continue;
                     }
           case 495773510706: { // 'sngl2'
           if (dt==DataType.Null) row.Float2 = null;
           else if (dt==DataType.Single) row.Float2 = Reader.ReadSingle(streamer);
           else break;
           continue;
                     }
           case 495773510707: { // 'sngl3'
           if (dt==DataType.Null) row.Float3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Single) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Single[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadSingle(streamer);
              row.Float3 = arr;
           }
           continue;
                     }
           case 495773510708: { // 'sngl4'
           if (dt==DataType.Null) row.Float4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Single) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Single>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadSingle(streamer) );
              row.Float4 = lst;
           }
           continue;
                     }
           case 1684171825: { // 'dbl1'
           if (dt==DataType.Double) row.Double1 = Reader.ReadDouble(streamer);
           else break;
           continue;
                     }
           case 1684171826: { // 'dbl2'
           if (dt==DataType.Null) row.Double2 = null;
           else if (dt==DataType.Double) row.Double2 = Reader.ReadDouble(streamer);
           else break;
           continue;
                     }
           case 1684171827: { // 'dbl3'
           if (dt==DataType.Null) row.Double3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Double) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Double[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadDouble(streamer);
              row.Double3 = arr;
           }
           continue;
                     }
           case 1684171828: { // 'dbl4'
           if (dt==DataType.Null) row.Double4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Double) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Double>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadDouble(streamer) );
              row.Double4 = lst;
           }
           continue;
                     }
           case 431164845105: { // 'dcml1'
           if (dt==DataType.Decimal) row.Decimal1 = Reader.ReadDecimal(streamer);
           else break;
           continue;
                     }
           case 431164845106: { // 'dcml2'
           if (dt==DataType.Null) row.Decimal2 = null;
           else if (dt==DataType.Decimal) row.Decimal2 = Reader.ReadDecimal(streamer);
           else break;
           continue;
                     }
           case 431164845107: { // 'dcml3'
           if (dt==DataType.Null) row.Decimal3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Decimal) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Decimal[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadDecimal(streamer);
              row.Decimal3 = arr;
           }
           continue;
                     }
           case 431164845108: { // 'dcml4'
           if (dt==DataType.Null) row.Decimal4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Decimal) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Decimal>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadDecimal(streamer) );
              row.Decimal4 = lst;
           }
           continue;
                     }
           case 1634563121: { // 'amt1'
           if (dt==DataType.Amount) row.Amount1 = Reader.ReadAmount(streamer);
           else break;
           continue;
                     }
           case 1634563122: { // 'amt2'
           if (dt==DataType.Null) row.Amount2 = null;
           else if (dt==DataType.Amount) row.Amount2 = Reader.ReadAmount(streamer);
           else break;
           continue;
                     }
           case 1634563123: { // 'amt3'
           if (dt==DataType.Null) row.Amount3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Amount) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new Azos.Financial.Amount[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadAmount(streamer);
              row.Amount3 = arr;
           }
           continue;
                     }
           case 1634563124: { // 'amt4'
           if (dt==DataType.Null) row.Amount4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Amount) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<Azos.Financial.Amount>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadAmount(streamer) );
              row.Amount4 = lst;
           }
           continue;
                     }
           case 422944466225: { // 'byte1'
           if (dt==DataType.Byte) row.Byte1 = Reader.ReadByte(streamer);
           else break;
           continue;
                     }
           case 422944466226: { // 'byte2'
           if (dt==DataType.Null) row.Byte2 = null;
           else if (dt==DataType.Byte) row.Byte2 = Reader.ReadByte(streamer);
           else break;
           continue;
                     }
           case 422944466227: { // 'byte3'

         if (dt==DataType.Null) row.Byte3 = null;
         else if (dt==DataType.ByteArray) row.Byte3 = streamer.ReadByteArray();
         else if (dt!=DataType.Array) break;
         else
         {
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Byte) break;
           row.Byte3 = Reader.ReadByteArray(streamer);
         }
         continue;
                     }
           case 422944466228: { // 'byte4'

         if (dt==DataType.Null) row.Byte4 = null;
         else if (dt==DataType.ByteArray) row.Byte4 = new List<byte>(streamer.ReadByteArray());
         else if (dt!=DataType.Array) break;
         else
         {
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Byte) break;
           row.Byte4 = new List<byte>(Reader.ReadByteArray(streamer));
         }
         continue;
                     }
           case 126866781660465: { // 'sbyte1'
           if (dt==DataType.SByte) row.SByte1 = Reader.ReadSByte(streamer);
           else break;
           continue;
                     }
           case 126866781660466: { // 'sbyte2'
           if (dt==DataType.Null) row.SByte2 = null;
           else if (dt==DataType.SByte) row.SByte2 = Reader.ReadSByte(streamer);
           else break;
           continue;
                     }
           case 126866781660467: { // 'sbyte3'
           if (dt==DataType.Null) row.SByte3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.SByte) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.SByte[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadSByte(streamer);
              row.SByte3 = arr;
           }
           continue;
                     }
           case 126866781660468: { // 'sbyte4'
           if (dt==DataType.Null) row.SByte4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.SByte) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.SByte>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadSByte(streamer) );
              row.SByte4 = lst;
           }
           continue;
                     }
           case 126892383564849: { // 'short1'
           if (dt==DataType.Int16) row.Short1 = Reader.ReadInt16(streamer);
           else break;
           continue;
                     }
           case 126892383564850: { // 'short2'
           if (dt==DataType.Null) row.Short2 = null;
           else if (dt==DataType.Int16) row.Short2 = Reader.ReadInt16(streamer);
           else break;
           continue;
                     }
           case 126892383564851: { // 'short3'
           if (dt==DataType.Null) row.Short3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int16) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Int16[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadInt16(streamer);
              row.Short3 = arr;
           }
           continue;
                     }
           case 126892383564852: { // 'short4'
           if (dt==DataType.Null) row.Short4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int16) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Int16>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadInt16(streamer) );
              row.Short4 = lst;
           }
           continue;
                     }
           case 33059464658711601: { // 'ushort1'
           if (dt==DataType.UInt16) row.UShort1 = Reader.ReadUInt16(streamer);
           else break;
           continue;
                     }
           case 33059464658711602: { // 'ushort2'
           if (dt==DataType.Null) row.UShort2 = null;
           else if (dt==DataType.UInt16) row.UShort2 = Reader.ReadUInt16(streamer);
           else break;
           continue;
                     }
           case 33059464658711603: { // 'ushort3'
           if (dt==DataType.Null) row.UShort3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt16) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.UInt16[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadUInt16(streamer);
              row.UShort3 = arr;
           }
           continue;
                     }
           case 33059464658711604: { // 'ushort4'
           if (dt==DataType.Null) row.UShort4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt16) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.UInt16>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadUInt16(streamer) );
              row.UShort4 = lst;
           }
           continue;
                     }
           case 1768846385: { // 'int1'
           if (dt==DataType.Int32) row.Int1 = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 1768846386: { // 'int2'
           if (dt==DataType.Null) row.Int2 = null;
           else if (dt==DataType.Int32) row.Int2 = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 1768846387: { // 'int3'
           if (dt==DataType.Null) row.Int3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int32) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Int32[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadInt32(streamer);
              row.Int3 = arr;
           }
           continue;
                     }
           case 1768846388: { // 'int4'
           if (dt==DataType.Null) row.Int4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int32) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Int32>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadInt32(streamer) );
              row.Int4 = lst;
           }
           continue;
                     }
           case 504280020017: { // 'uint1'
           if (dt==DataType.UInt32) row.UInt1 = Reader.ReadUInt32(streamer);
           else break;
           continue;
                     }
           case 504280020018: { // 'uint2'
           if (dt==DataType.Null) row.UInt2 = null;
           else if (dt==DataType.UInt32) row.UInt2 = Reader.ReadUInt32(streamer);
           else break;
           continue;
                     }
           case 504280020019: { // 'uint3'
           if (dt==DataType.Null) row.UInt3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt32) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.UInt32[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadUInt32(streamer);
              row.UInt3 = arr;
           }
           continue;
                     }
           case 504280020020: { // 'uint4'
           if (dt==DataType.Null) row.UInt4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt32) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.UInt32>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadUInt32(streamer) );
              row.UInt4 = lst;
           }
           continue;
                     }
           case 465725974321: { // 'long1'
           if (dt==DataType.Int64) row.Long1 = Reader.ReadInt64(streamer);
           else break;
           continue;
                     }
           case 465725974322: { // 'long2'
           if (dt==DataType.Null) row.Long2 = null;
           else if (dt==DataType.Int64) row.Long2 = Reader.ReadInt64(streamer);
           else break;
           continue;
                     }
           case 465725974323: { // 'long3'
           if (dt==DataType.Null) row.Long3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int64) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Int64[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadInt64(streamer);
              row.Long3 = arr;
           }
           continue;
                     }
           case 465725974324: { // 'long4'
           if (dt==DataType.Null) row.Long4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Int64) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Int64>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadInt64(streamer) );
              row.Long4 = lst;
           }
           continue;
                     }
           case 129108586424113: { // 'ulong1'
           if (dt==DataType.UInt64) row.ULong1 = Reader.ReadUInt64(streamer);
           else break;
           continue;
                     }
           case 129108586424114: { // 'ulong2'
           if (dt==DataType.Null) row.ULong2 = null;
           else if (dt==DataType.UInt64) row.ULong2 = Reader.ReadUInt64(streamer);
           else break;
           continue;
                     }
           case 129108586424115: { // 'ulong3'
           if (dt==DataType.Null) row.ULong3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt64) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.UInt64[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadUInt64(streamer);
              row.ULong3 = arr;
           }
           continue;
                     }
           case 129108586424116: { // 'ulong4'
           if (dt==DataType.Null) row.ULong4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.UInt64) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.UInt64>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadUInt64(streamer) );
              row.ULong4 = lst;
           }
           continue;
                     }
           case 431131747633: { // 'date1'
           if (dt==DataType.DateTime) row.DateTime1 = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 431131747634: { // 'date2'
           if (dt==DataType.Null) row.DateTime2 = null;
           else if (dt==DataType.DateTime) row.DateTime2 = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 431131747635: { // 'date3'
           if (dt==DataType.Null) row.DateTime3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.DateTime) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.DateTime[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadDateTime(streamer);
              row.DateTime3 = arr;
           }
           continue;
                     }
           case 431131747636: { // 'date4'
           if (dt==DataType.Null) row.DateTime4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.DateTime) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.DateTime>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadDateTime(streamer) );
              row.DateTime4 = lst;
           }
           continue;
                     }
           case 7631665: { // 'ts1'
           if (dt==DataType.TimeSpan) row.TimeSpan1 = Reader.ReadTimeSpan(streamer);
           else break;
           continue;
                     }
           case 7631666: { // 'ts2'
           if (dt==DataType.Null) row.TimeSpan2 = null;
           else if (dt==DataType.TimeSpan) row.TimeSpan2 = Reader.ReadTimeSpan(streamer);
           else break;
           continue;
                     }
           case 7631667: { // 'ts3'
           if (dt==DataType.Null) row.TimeSpan3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.TimeSpan) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.TimeSpan[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadTimeSpan(streamer);
              row.TimeSpan3 = arr;
           }
           continue;
                     }
           case 7631668: { // 'ts4'
           if (dt==DataType.Null) row.TimeSpan4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.TimeSpan) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.TimeSpan>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadTimeSpan(streamer) );
              row.TimeSpan4 = lst;
           }
           continue;
                     }
           case 444351472689: { // 'guid1'
           if (dt==DataType.Guid) row.Guid1 = Reader.ReadGuid(streamer);
           else break;
           continue;
                     }
           case 444351472690: { // 'guid2'
           if (dt==DataType.Null) row.Guid2 = null;
           else if (dt==DataType.Guid) row.Guid2 = Reader.ReadGuid(streamer);
           else break;
           continue;
                     }
           case 444351472691: { // 'guid3'
           if (dt==DataType.Null) row.Guid3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Guid) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Guid[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadGuid(streamer);
              row.Guid3 = arr;
           }
           continue;
                     }
           case 444351472692: { // 'guid4'
           if (dt==DataType.Null) row.Guid4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Guid) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<System.Guid>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadGuid(streamer) );
              row.Guid4 = lst;
           }
           continue;
                     }
           case 444066260017: { // 'gdid1'
           if (dt==DataType.GDID) row.GDID1 = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 444066260018: { // 'gdid2'
           if (dt==DataType.Null) row.GDID2 = null;
           else if (dt==DataType.GDID) row.GDID2 = Reader.ReadGDID(streamer);
           else break;
           continue;
                     }
           case 444066260019: { // 'gdid3'
           if (dt==DataType.Null) row.GDID3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.GDID) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new GDID[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadGDID(streamer);
              row.GDID3 = arr;
           }
           continue;
                     }
           case 444066260020: { // 'gdid4'
           if (dt==DataType.Null) row.GDID4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.GDID) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<GDID>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadGDID(streamer) );
              row.GDID4 = lst;
           }
           continue;
                     }
           case 1718182961: { // 'fid1'
           if (dt==DataType.FID) row.Fid1 = Reader.ReadFID(streamer);
           else break;
           continue;
                     }
           case 1718182962: { // 'fid2'
           if (dt==DataType.Null) row.Fid2 = null;
           else if (dt==DataType.FID) row.Fid2 = Reader.ReadFID(streamer);
           else break;
           continue;
                     }
           case 1718182963: { // 'fid3'
           if (dt==DataType.Null) row.Fid3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.FID) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new Azos.FID[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadFID(streamer);
              row.Fid3 = arr;
           }
           continue;
                     }
           case 1718182964: { // 'fid4'
           if (dt==DataType.Null) row.Fid4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.FID) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<Azos.FID>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadFID(streamer) );
              row.Fid4 = lst;
           }
           continue;
                     }
           case 7368753: { // 'pp1'
           if (dt==DataType.PilePointer) row.PilePointer1 = Reader.ReadPilePointer(streamer);
           else break;
           continue;
                     }
           case 7368754: { // 'pp2'
           if (dt==DataType.Null) row.PilePointer2 = null;
           else if (dt==DataType.PilePointer) row.PilePointer2 = Reader.ReadPilePointer(streamer);
           else break;
           continue;
                     }
           case 7368755: { // 'pp3'
           if (dt==DataType.Null) row.PilePointer3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.PilePointer) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new Azos.Pile.PilePointer[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadPilePointer(streamer);
              row.PilePointer3 = arr;
           }
           continue;
                     }
           case 7368756: { // 'pp4'
           if (dt==DataType.Null) row.PilePointer4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.PilePointer) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<Azos.Pile.PilePointer>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadPilePointer(streamer) );
              row.PilePointer4 = lst;
           }
           continue;
                     }
           case 1852601137: { // 'nls1'
           if (dt==DataType.NLSMap) row.NLS1 = Reader.ReadNLSMap(streamer);
           else break;
           continue;
                     }
           case 1852601138: { // 'nls2'
           if (dt==DataType.Null) row.NLS2 = null;
           else if (dt==DataType.NLSMap) row.NLS2 = Reader.ReadNLSMap(streamer);
           else break;
           continue;
                     }
           case 1852601139: { // 'nls3'
           if (dt==DataType.Null) row.NLS3 = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.NLSMap) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new Azos.Serialization.JSON.NLSMap[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadNLSMap(streamer);
              row.NLS3 = arr;
           }
           continue;
                     }
           case 1852601140: { // 'nls4'
           if (dt==DataType.Null) row.NLS4 = null;
           if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.NLSMap) break;
              var len = Reader.ReadArrayLength(streamer);
              var lst = new List<Azos.Serialization.JSON.NLSMap>(len);
              for(var i=0; i<len; i++) lst.Add( Reader.ReadNLSMap(streamer) );
              row.NLS4 = lst;
           }
           continue;
                     }
           case 1918988914: { // 'rarr'
           if (dt==DataType.Null) { row.RowArray = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.RowArray = Reader.ReadRowArray<Azos.Tests.Nub.Serialization.AllArowTypesRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
           case 1919710068: { // 'rlst'
           if (dt==DataType.Null) { row.RowList = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.RowList = Reader.ReadRowList<Azos.Tests.Nub.Serialization.AllArowTypesRow>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.Ver1Row
  ///</summary>
  internal class Ver1Row_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.Ver1Row), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.Ver1Row)aRow;
      // 'a' = 97
      if (row.A != null)
      AW.Write(streamer, 97, row.A);
      else AW.WriteNull(streamer, 97);
      // 'b' = 98
      AW.Write(streamer, 98, row.B);
      // 'c' = 99
      if (row.C.HasValue)
      AW.Write(streamer, 99, row.C.Value);
      else AW.WriteNull(streamer, 99);
      // 'd' = 100
      if (row.D.HasValue)
      AW.Write(streamer, 100, row.D.Value);
      else AW.WriteNull(streamer, 100);
      // 'e' = 101
      if (row.E != null)
      AW.Write(streamer, 101, row.E);
      else AW.WriteNull(streamer, 101);
      // 'f' = 102
      AW.Write(streamer, 102, row.F);
      // 'g' = 103
      if (row.G != null)
      Writer.WriteRowArray(streamer, 103, row.G);
      else AW.WriteNull(streamer, 103);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.Ver1Row)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 97: { // 'a'
           if (dt==DataType.Null) row.A = null;
           else if (dt==DataType.String) row.A = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 98: { // 'b'
           if (dt==DataType.Int32) row.B = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 99: { // 'c'
           if (dt==DataType.Null) row.C = null;
           else if (dt==DataType.Int32) row.C = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 100: { // 'd'
           if (dt==DataType.Null) row.D = null;
           else if (dt==DataType.Boolean) row.D = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 101: { // 'e'

         if (dt==DataType.Null) row.E = null;
         else if (dt==DataType.ByteArray) row.E = streamer.ReadByteArray();
         else if (dt!=DataType.Array) break;
         else
         {
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Byte) break;
           row.E = Reader.ReadByteArray(streamer);
         }
         continue;
                     }
           case 102: { // 'f'
           if (dt==DataType.DateTime) row.F = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 103: { // 'g'
           if (dt==DataType.Null) { row.G = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.G = Reader.ReadRowList<Azos.Tests.Nub.Serialization.Ver1Row>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

  ///<summary>
  /// ITypeSerializationCore for Azos.Tests.Nub.Serialization.Ver2Row
  ///</summary>
  internal class Ver2Row_arow_core : Azos.Serialization.Arow.ITypeSerializationCore
  {
    void ITypeSerializationCore.Register()
    {
       ArowSerializer.Register(typeof(Azos.Tests.Nub.Serialization.Ver2Row), this);
    }

    void ITypeSerializationCore.Serialize(TypedDoc aRow, WritingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.Ver2Row)aRow;
      // 'a' = 97
      if (row.A != null)
      AW.Write(streamer, 97, row.A);
      else AW.WriteNull(streamer, 97);
      // 'be' = 25189
      AW.Write(streamer, 25189, row.B);
      // 'ce' = 25445
      if (row.C.HasValue)
      AW.Write(streamer, 25445, row.C.Value);
      else AW.WriteNull(streamer, 25445);
      // 'd' = 100
      AW.Write(streamer, 100, row.D);
      // 'e' = 101
      if (row.E != null)
      AW.Write(streamer, 101, row.E);
      else AW.WriteNull(streamer, 101);
      // 'f' = 102
      if (row.F.HasValue)
      AW.Write(streamer, 102, row.F.Value);
      else AW.WriteNull(streamer, 102);
      // 'ge' = 26469
      if (row.G != null)
      Writer.WriteRowArray(streamer, 26469, row.G);
      else AW.WriteNull(streamer, 26469);
    }

    void ITypeSerializationCore.Deserialize(TypedDoc aRow, ReadingStreamer streamer)
    {
      var row = (Azos.Tests.Nub.Serialization.Ver2Row)aRow;
      while(true)
      {
         var name = Reader.ReadName(streamer);
         if (name==0) break;//EORow
         var dt = Reader.ReadDataType(streamer);
         DataType? atp = null;
         switch(name)
         {
           case 97: { // 'a'
           if (dt==DataType.Null) row.A = null;
           else if (dt==DataType.String) row.A = Reader.ReadString(streamer);
           else break;
           continue;
                     }
           case 25189: { // 'be'
           if (dt==DataType.Int32) row.B = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 25445: { // 'ce'
           if (dt==DataType.Null) row.C = null;
           else if (dt==DataType.Int32) row.C = Reader.ReadInt32(streamer);
           else break;
           continue;
                     }
           case 100: { // 'd'
           if (dt==DataType.Boolean) row.D = Reader.ReadBoolean(streamer);
           else break;
           continue;
                     }
           case 101: { // 'e'
           if (dt==DataType.Null) row.E = null;
           else if (dt!=DataType.Array) break;
           else
           {
              atp = Reader.ReadDataType(streamer);
              if (atp!=DataType.Char) break;
              var len = Reader.ReadArrayLength(streamer);
              var arr = new System.Char[len];
              for(var i=0; i<len; i++) arr[i] = Reader.ReadChar(streamer);
              row.E = arr;
           }
           continue;
                     }
           case 102: { // 'f'
           if (dt==DataType.Null) row.F = null;
           else if (dt==DataType.DateTime) row.F = Reader.ReadDateTime(streamer);
           else break;
           continue;
                     }
           case 26469: { // 'ge'
           if (dt==DataType.Null) { row.G = null; continue;}
           if (dt!=DataType.Array) break;
           atp = Reader.ReadDataType(streamer);
           if (atp!=DataType.Doc) break;
           row.G = Reader.ReadRowList<Azos.Tests.Nub.Serialization.Ver2Row>(row, streamer, CodeGenerator.GetName(name));
           continue;
                     }
         }
         Reader.ConsumeUnmatched(row, streamer, CodeGenerator.GetName(name), dt, atp);
      }
    }
  }//class

}//namespace


//EOF
