/*<FILE_LICENSE>
 * Azos (A to Z Application Operating System) Framework
 * The A to Z Foundation (a.k.a. Azist) licenses this file to you under the MIT license.
 * See the LICENSE file in the project root for more information.
</FILE_LICENSE>*/

using Azos.Data;

namespace Azos.Serialization.Bix
{
  /// <summary>
  /// Designates classes which implement Serialization and Deserialization core for specific types
  /// These classes are generated by CLI Bix compiler
  /// </summary>
  public abstract class BixCore
  {
    protected BixCore(string targetName)
    {
      var t = GetType();
      while(t != null && t != typeof(BixCore<>)) t = t.BaseType;
      Aver.IsNotNull(t, "Internal error, BixCore<T> could not be found in derivation chain of {0}".Args(GetType().FullNameWithExpandedGenericArgs()));

      t = t.GetGenericArguments()[0]; //this is done here not to introduce extra virtual methods
      Attribute = BixAttribute.GetGuidTypeAttribute<TypedDoc, BixAttribute>(t);
      TargetedType = new TargetedType(targetName, t);
    }

    /// <summary>
    /// BixAttribute instance that decorates the type
    /// </summary>
    public readonly BixAttribute Attribute;

    /// <summary> Returns the target type which this BixCore implementation handles </summary>
    public readonly TargetedType TargetedType;

    /// <summary>
    /// Serializes typed data document into BixWriter
    /// </summary>
    public abstract void Serialize(BixWriter writer, TypedDoc doc, BixContext ctx);

    /// <summary>
    /// Deserializes typed data document from BixReader
    /// </summary>
    public abstract void Deserialize(BixReader reader, TypedDoc doc, BixContext ctx);
  }

  /// <summary>
  /// Designates classes which implement Serialization and Deserialization core for specific types
  /// Concrete generated class implementations derive from this class
  /// </summary>
  public abstract class BixCore<T> : BixCore where T : TypedDoc
  {
    protected BixCore(string targetName) : base(targetName) { }

    /// <summary>
    /// Serializes typed data document into BixWriter
    /// </summary>
    public sealed override void Serialize(BixWriter writer, TypedDoc doc, BixContext ctx) => SerializeCore(writer, (T)doc, ctx);

    /// <summary>
    /// Serializes typed data document into BixWriter
    /// </summary>
    public sealed override void Deserialize(BixReader reader, TypedDoc doc, BixContext ctx) => DeserializeCore(reader, (T)doc, ctx);

    /// <summary>
    /// Serializes typed data document into BixWriter
    /// </summary>
    public abstract void SerializeCore(BixWriter writer, T doc, BixContext ctx);

    /// <summary>
    /// Deserializes typed data document from BixWriter
    /// </summary>
    public abstract void DeserializeCore(BixReader reader, T doc, BixContext ctx);
  }
}
